{"version":3,"sources":["../ts/command-socket-browser-client.ts"],"names":["core_1","require","browser_websocket_1","CommandSocketBrowserClient","CommandSocket","[object Object]","urlOrWebSocket","commandRegistry","CommandRegistry","super","BrowserWebSocket","exports"],"mappings":"oEAMA,MAAAA,OAAAC,QAAA,wBAMAC,oBAAAD,QAAA,uBASA,MAAaE,mCAEmCH,OAAAI,cAI/CC,YAAmBC,EACZC,EAAwD,IAAIP,OAAAQ,iBAElEC,MAAM,IAAIP,oBAAAQ,iBAAiBJ,GAAwBC,IATrDI,QAAAR,2BAAAA","file":"command-socket-browser-client.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t12:40 PM -- November 21st, 2019.\n *\tProject: @commandsocket/browser-client\n */\n\nimport {\n\tCommandSocket,\n\tCommandSetStructure,\n\tCommandRegistry,\n\tFullCommandSet\n} from \"@command-socket/core\";\nimport { BrowserWebSocket } from \"./browser-websocket\";\n\n/**\n * A browser-specific implementation of a CommandSocket.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class CommandSocketBrowserClient<\n\tLCS extends CommandSetStructure = any,\n\tRCS extends CommandSetStructure = any> extends CommandSocket<LCS, RCS> {\n\t\n\tpublic constructor(url: string, commandRegistry?: CommandRegistry<FullCommandSet<LCS>>);\n\tpublic constructor(websocket: WebSocket, commandRegistry?: CommandRegistry<FullCommandSet<LCS>>);\n\tpublic constructor(urlOrWebSocket: string | WebSocket,\n\t\t\t\t\t   commandRegistry: CommandRegistry<FullCommandSet<LCS>> = new CommandRegistry<FullCommandSet<LCS>>()) {\n\t\n\t\tsuper(new BrowserWebSocket(urlOrWebSocket as any), commandRegistry);\n\t\n\t}\n\t\n}"]}